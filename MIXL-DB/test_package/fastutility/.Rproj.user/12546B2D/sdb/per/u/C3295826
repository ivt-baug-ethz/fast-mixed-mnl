{
    "collab_server" : "",
    "contents" : "\n\n\nif (kernel == 1) {\n  seq_r <- loglike(beta)\n} else {\n  par_r <- loglike(beta)\n}\nmicrobenchmark(loglike(beta))\n\n\n\n\n# ------------------------------------------------------------------------------------------------------------#\n#\n# ------- LOAD DATA AND GET STARTED -------\n#\n# ------------------------------------------------------------------------------------------------------------#\n\n# load and read test data frame and turn it into data table\n\ndatafilename=\"db_data_olymp_300.csv\"\ndata <- read.csv(file = datafilename, stringsAsFactors=F, quote = \"\\\\\\\"\", sep=\";\", row.names=NULL, na = \".\")\ndata=data.table(data)\n\n# subsetting:\n#data <- data[data$jahr == 2015,]\n#data <- data[data$regelung_count < 100,]\n\n# rename person ID and choice\n\n#data=plyr::rename(data, c('choice_id' = 'ID'))\ndata=plyr::rename(data, c('super_id' = 'ID'))\ndata=plyr::rename(data, c('choice_s' = 'CHOICE'))\n\n# number of individuals and choice sets in the data\n\nN=length(unique(data$ID))\nN\nchoicetasks=nrow(data)\nchoicetasks\n\n# check for NAs\n\ncolSums(is.na(data))\n\n# create a running index of choice tasks for each person\n\ndata <- arrange(data, ID)\ndata=data.table(data)\n\nif (paneldata==1) {\n  data[,running_task := regelung_task]\n} else {\n  data[,running_task :=cross_id]\n  data[,ID :=cross_id]\n}\n\n\n\n\nif (startingkit==1) {\n  # load beta vector\n  load(paste0(modelname, \"_est.Rdata\"))\n  beta <- est\n}\n",
    "created" : 1506514654915.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "3676016103",
    "id" : "C3295826",
    "lastKnownWriteTime" : 23644306070569048,
    "last_content_update" : 1506518694893,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}