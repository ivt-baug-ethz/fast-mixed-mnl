{
    "collab_server" : "",
    "contents" : "\n# ------------------------------------------------------------------------------------------------------------#\n#\n# ------- PACKAGES -------\n#\n# ------------------------------------------------------------------------------------------------------------#\n\n# change local library if needed \n\nlocalLibrary <- NULL\n\nrequire(xtable, lib.loc = localLibrary)\nrequire(texreg, lib.loc = localLibrary)\n\n\n# ------------------------------------------------------------------------------------------------------------#\n#\n# ------- THE TEXOUT FUNCTION -------\n#\n# ------------------------------------------------------------------------------------------------------------#\n\ntexout=function(model) {\n  \n  #calculations\n  \n  est<<-model$estimate\n  varcov=vcov(model)\n  meat1=meat(model)\n  bread1=bread(model)\n  meat1[is.na(meat1)]=0\n  bread1[is.na(bread1)]=0\n  robvarcov=sandwich(model,bread1,meat1)\n  se=sqrt(diag(varcov))\n  robse=sqrt(diag(robvarcov))\n  trat_0=est/se\n  robtrat_0=est/robse\n  trat_1=(est-1)/se\n  robtrat_1=(est-1)/robse\n  se[model$fixed]=NA\n  robse[model$fixed]=NA\n  trat_0[model$fixed]=NA\n  robtrat_0[model$fixed]=NA\n  trat_1[model$fixed]=NA\n  robtrat_1[model$fixed]=NA\n  varcov[model$fixed,]=NA\n  varcov[,model$fixed]=NA\n  robvarcov[model$fixed,]=NA\n  robvarcov[,model$fixed]=NA\n  finalLL=model$maxim\n  iterations=model$iterations\n  zeroLL=sum(loglike(0*beta))\n  initLL=sum(loglike(beta))\n  #choiceLL=sum(LLchoice)\n  params=length(beta)-sum(model$fixed)\n  rho2zero=1-finalLL/zeroLL\n  adjrho2zero=1-(finalLL-params)/zeroLL\n  est=round(est,4)\n  se=round(se,4)\n  trat_0=round(trat_0,2)\n  trat_1=round(trat_1,2)\n  robse=round(robse,4)\n  robtrat_0=round(robtrat_0,2)\n  robtrat_1=round(robtrat_1,2)\n  rob_pval0 = 2*pnorm(-abs(robtrat_0))\n  rob_pval1 = 2*pnorm(-abs(robtrat_1))\n  \n  output=t(rbind(est,se,trat_0,trat_1,robse,robtrat_0,rob_pval0,robtrat_1,rob_pval1))\n  \n  # customize coefficient estimates output\n  \n  take_robpval1 <- grepl(pattern = \"SCALE\", row.names(output), fixed=T)\n  \n  robpval_print <- ifelse(take_robpval1, rob_pval1, rob_pval0 )\n  \n  output=t(rbind(est,robse,robpval_print))\n  \n  # print and save output tables\n  \n  cat(\"Model diagnosis:\",model$message,\"\\n\\n\")\n  \n  cat(\"LL: \",finalLL,\"\\n\\n\")\n  \n  cat(\"Estimates:\\n\")\n  print(output)\n  \n  xtable(output)\n  \n  # make custom GOFs\n  \n  gofs=c(\"# estimated parameters\"=length(beta)-length(fixedparams),\n         \n         \"Number of respondents\"= N,\n         \"Number of choice observations\"= choicetasks,\n         \n         \"Number of draws\"= Ndraws,\n         \"LL(null)\"= zeroLL,\n         \"LL(final)\"= finalLL,\n         #\"LL(choicemodel)\"= choiceLL,\n         \n         \"McFadden R2\" = (1-finalLL/zeroLL),\n         \n         \"AIC\"= round(-2*finalLL+2*(length(beta)-length(fixedparams)),2),\n         \"AICc\"= round(-2*finalLL+2*(length(beta)-length(fixedparams))*N/(N-(length(beta)-length(fixedparams))-1),2),\n         \"BIC\"= round(-2*finalLL+(length(beta)-length(fixedparams))*log(choicetasks),2)\n         \n  )\n  \n  # #Make coefficient ratio table\n  # \n  # ratios=c('VTTS [CHF/h] CAR' = unname(60 * est['B_TIME_C'] / est['B_COST']) ,\n  #          'VTTS [CHF/h] PT' = unname(60 * est['B_TIME_PT'] / est['B_COST'])\n  # )\n  \n  #make texreg table\n  \n  texmod <- createTexreg(coef.names = names(est),\n                         coef = unname(est),\n                         se = unname(robse),\n                         \n                         pvalues = robpval_print,\n                         \n                         gof.names = c(names(gofs)),\n                         gof = c(unname(gofs))\n                         \n  )\n  \n  \n  runlabel <- paste0(modelname,\"_\", format(Sys.time(), \"%Y%m%d_%H%M%S_\"))\n  \n  save(texmod, file=paste0(runlabel, \"texmod.RData\"))\n  \n  \n  tab1 <- texreg(texmod, stars = c(0.01,0.05,0.1),\n                 caption = modelname, fontsize = \"footnotesize\",\n                 booktabs = T)\n  print(tab1)\n  \n}\n\n",
    "created" : 1507032809120.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2104221624",
    "id" : "7800AA65",
    "lastKnownWriteTime" : 1501592946,
    "last_content_update" : 1501592946,
    "path" : "P:/_TEMP/Molloy/2_MIXL_TRAIN/texout.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}